// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "paddingHorizontal": 18,
      "paddingTop": 18,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "flex-start",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingBottom": 5,
      }
    }
  >
    <View
      style={
        Object {
          "width": "85%",
        }
      }
    >
      <div />
    </View>
    <View
      accessibilityHint="open select location modal"
      accessibilityLabel="pin button"
      accessibilityRole="imagebutton"
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#1E2022",
            "borderRadius": 100,
            "display": "flex",
            "height": 42,
            "justifyContent": "center",
            "overflow": "hidden",
            "position": "relative",
            "width": 42,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#1E2022",
                "borderRadius": 100,
                "display": "flex",
                "height": 42,
                "justifyContent": "center",
                "overflow": "hidden",
                "position": "relative",
                "width": 42,
              },
              undefined,
              undefined,
            ],
          ]
        }
      >
        <ViewManagerAdapter_ExpoBlurView
          proxiedProperties={
            Object {
              "intensity": 0,
              "tint": "default",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
        <div />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "flex-start",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingBottom": 5,
      }
    }
  >
    <View
      accessibilityHint="open sightings modal"
      accessibilityLabel="next sighting"
      accessibilityRole="button"
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#1E2022",
          "borderRadius": 10,
          "padding": 8,
          "width": "48%",
        }
      }
    >
      <div />
      <div />
    </View>
    <View
      accessibilityHint="countdown to next sighting"
      accessibilityLabel="countdown"
      accessibilityRole="text"
      accessible={true}
      style={
        Object {
          "backgroundColor": "#1E2022",
          "borderRadius": 10,
          "padding": 8,
          "width": "48%",
        }
      }
    >
      <div />
      <div />
    </View>
  </View>
</View>
`;
