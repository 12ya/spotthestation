// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FeedSearchResultItem renders correctly 1`] = `
<View
  accessibilityHint="pressable feed item"
  accessibilityLabel="pressable feed item"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "flex-start",
      "justifyContent": "space-between",
      "paddingTop": 23,
      "position": "relative",
      "width": "47%",
    }
  }
>
  <View
    accessibilityHint="tags"
    accessibilityLabel="tags"
    accessibilityRole="text"
    accessible={true}
    style={
      {
        "flexDirection": "row",
        "left": 26,
        "position": "absolute",
        "top": 52,
        "zIndex": 2,
      }
    }
  />
  <RCTImageView
    accessibilityHint="image"
    accessibilityLabel="image"
    accessibilityRole="image"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessible={true}
    internal_analyticTag={null}
    resizeMode="cover"
    source={
      [
        {
          "uri": "",
        },
      ]
    }
    style={
      {
        "aspectRatio": 0.7,
        "borderRadius": 17,
        "height": undefined,
        "marginBottom": 17,
        "overflow": "hidden",
        "width": "100%",
      }
    }
  />
  <Text
    accessibilityHint=""
    accessibilityLabel="type"
    accessibilityRole="text"
    accessible={true}
    allowFontScaling={false}
    style={
      [
        {},
        [
          {
            "fontSize": 23,
            "lineHeight": 35,
          },
          {
            "fontFamily": "Helvetica Neue",
          },
          {
            "color": "#191015",
          },
        ],
        undefined,
        undefined,
        {
          "color": "#ADADAE",
          "fontFamily": "Helvetica Neue",
          "fontSize": 20,
          "lineHeight": 25,
          "textTransform": "uppercase",
        },
      ]
    }
  />
  <Text
    accessibilityHint="title"
    accessibilityLabel="title"
    accessibilityRole="text"
    accessible={true}
    allowFontScaling={false}
    style={
      [
        {},
        [
          {
            "fontSize": 23,
            "lineHeight": 35,
          },
          {
            "fontFamily": "Helvetica Neue",
          },
          {
            "color": "#191015",
          },
        ],
        undefined,
        undefined,
        {
          "color": "#DEDDDE",
          "fontFamily": "Helvetica Neue",
          "fontSize": 26,
          "lineHeight": 30,
          "paddingBottom": 7,
        },
      ]
    }
  >
    title
  </Text>
</View>
`;

exports[`renders correctly 1`] = `
<View
  accessibilityHint="pressable feed item"
  accessibilityLabel="pressable feed item"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "flex-start",
      "justifyContent": "space-between",
      "paddingTop": 23,
      "position": "relative",
      "width": "47%",
    }
  }
>
  <View
    accessibilityHint="tags"
    accessibilityLabel="tags"
    accessibilityRole="text"
    accessible={true}
    style={
      {
        "flexDirection": "row",
        "left": 26,
        "position": "absolute",
        "top": 52,
        "zIndex": 2,
      }
    }
  />
  <RCTImageView
    accessibilityHint="image"
    accessibilityLabel="image"
    accessibilityRole="image"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessible={true}
    internal_analyticTag={null}
    resizeMode="cover"
    source={
      [
        {
          "uri": "",
        },
      ]
    }
    style={
      {
        "aspectRatio": 0.7,
        "borderRadius": 17,
        "height": undefined,
        "marginBottom": 17,
        "overflow": "hidden",
        "width": "100%",
      }
    }
  />
  <Text
    accessibilityHint=""
    accessibilityLabel="type"
    accessibilityRole="text"
    accessible={true}
    allowFontScaling={false}
    style={
      [
        {},
        [
          {
            "fontSize": 23,
            "lineHeight": 35,
          },
          {
            "fontFamily": "Helvetica Neue",
          },
          {
            "color": "#191015",
          },
        ],
        undefined,
        undefined,
        {
          "color": "#ADADAE",
          "fontFamily": "Helvetica Neue",
          "fontSize": 20,
          "lineHeight": 25,
          "textTransform": "uppercase",
        },
      ]
    }
  />
  <Text
    accessibilityHint="title"
    accessibilityLabel="title"
    accessibilityRole="text"
    accessible={true}
    allowFontScaling={false}
    style={
      [
        {},
        [
          {
            "fontSize": 23,
            "lineHeight": 35,
          },
          {
            "fontFamily": "Helvetica Neue",
          },
          {
            "color": "#191015",
          },
        ],
        undefined,
        undefined,
        {
          "color": "#DEDDDE",
          "fontFamily": "Helvetica Neue",
          "fontSize": 26,
          "lineHeight": 30,
          "paddingBottom": 7,
        },
      ]
    }
  >
    title
  </Text>
</View>
`;
