// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  accessibilityRole="imagebutton"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
>
  <View
    animatedStyle={
      {
        "value": {},
      }
    }
    collapsable={false}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "red",
        "borderRadius": 143,
        "display": "flex",
        "height": 60,
        "justifyContent": "center",
        "overflow": "hidden",
        "position": "relative",
        "width": 60,
      }
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "transparent",
          },
          [
            {
              "alignItems": "center",
              "backgroundColor": "#1E2022",
              "borderRadius": 143,
              "display": "flex",
              "height": 60,
              "justifyContent": "center",
              "overflow": "hidden",
              "position": "relative",
              "width": 60,
            },
            undefined,
          ],
        ]
      }
    >
      <ViewManagerAdapter_ExpoBlurView
        proxiedProperties={
          {
            "intensity": 0,
            "tint": "default",
          }
        }
        style={
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View>
        <RCTImageView
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          internal_analyticTag={null}
          resizeMode="contain"
          source={
            [
              {
                "height": undefined,
                "uri": undefined,
                "width": undefined,
              },
            ]
          }
          style={
            {
              "height": 29,
              "overflow": "hidden",
              "resizeMode": "contain",
              "tintColor": "#FFFFFF",
              "width": 29,
            }
          }
          tintColor="#FFFFFF"
        />
      </View>
    </View>
  </View>
</View>
`;
