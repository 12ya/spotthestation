// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<div>
  <View
    style={
      Array [
        Object {
          "left": 26,
          "position": "absolute",
          "zIndex": 9,
        },
        Object {
          "top": 35,
        },
      ]
    }
  >
    <View
      accessibilityHint="disable full screen mode"
      accessibilityLabel="x button"
      accessibilityRole="imagebutton"
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#1E2022",
            "borderRadius": 143,
            "display": "flex",
            "height": 60,
            "justifyContent": "center",
            "overflow": "hidden",
            "position": "relative",
            "width": 60,
          },
          Array [
            Object {
              "backgroundColor": "rgba(255, 255, 255, 0.2)",
              "height": 78,
              "marginTop": 35,
              "width": 78,
            },
            Object {
              "height": 63,
              "marginTop": 0,
              "width": 63,
            },
          ],
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#1E2022",
                "borderRadius": 143,
                "display": "flex",
                "height": 60,
                "justifyContent": "center",
                "overflow": "hidden",
                "position": "relative",
                "width": 60,
              },
              undefined,
              undefined,
            ],
          ]
        }
      >
        <ViewManagerAdapter_ExpoBlurView
          proxiedProperties={
            Object {
              "intensity": 0,
              "tint": "default",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
        <View>
          <RCTImageView
            internal_analyticTag={null}
            resizeMode="contain"
            source={
              Array [
                Object {
                  "height": undefined,
                  "uri": undefined,
                  "width": undefined,
                },
              ]
            }
            style={
              Object {
                "height": 29,
                "overflow": "hidden",
                "resizeMode": "contain",
                "tintColor": "#FFFFFF",
                "width": 29,
              }
            }
            tintColor="#FFFFFF"
          />
        </View>
      </View>
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "rgba(0, 0, 0, 1)",
          "borderRadius": 17,
          "flex": 1,
          "overflow": "hidden",
          "position": "relative",
        },
        Object {
          "marginTop": 0,
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {},
          Array [
            Object {
              "fontSize": 23,
              "lineHeight": 35,
            },
            Object {
              "fontFamily": "Helvetica Neue",
            },
            Object {
              "color": "#191015",
            },
          ],
          undefined,
          undefined,
          Array [
            Object {
              "color": "#FFFFFF",
              "fontFamily": "Helvetica Neue",
              "fontSize": 35,
              "lineHeight": 56,
              "textAlign": "center",
            },
            Object {
              "borderColor": "#0B3D91",
              "borderRadius": 10,
              "borderWidth": 1,
              "padding": 5,
              "textDecorationLine": "underline",
            },
          ],
        ]
      }
    >
      issView.cameraPermissionText undefined
    </Text>
  </View>
  <Modal
    animationType="none"
    deviceHeight={null}
    deviceWidth={null}
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={true}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    onSwipeComplete={[Function]}
    panResponderThreshold={4}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeDirection="down"
    swipeThreshold={100}
    transparent={true}
    useNativeDriverForBackdrop={true}
    visible={false}
  />
  <Modal
    animationType="none"
    deviceHeight={null}
    deviceWidth={null}
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={true}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    onSwipeComplete={[Function]}
    panResponderThreshold={4}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeDirection="down"
    swipeThreshold={100}
    transparent={true}
    useNativeDriverForBackdrop={true}
    visible={false}
  />
</div>
`;
