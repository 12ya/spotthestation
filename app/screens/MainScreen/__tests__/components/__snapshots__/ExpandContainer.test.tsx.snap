// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ExpandContainer renders correctly 1`] = `
<View
  style={
    [
      {
        "marginTop": 52,
        "width": "100%",
      },
      undefined,
    ]
  }
>
  <View
    style={
      {
        "flexDirection": "row",
        "justifyContent": "space-between",
        "marginBottom": 26,
      }
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
          },
          undefined,
        ]
      }
    >
      <Text
        accessibilityHint="homeScreen.selectLocation.nearby"
        accessibilityLabel="title"
        accessibilityRole="text"
        accessible={true}
        allowFontScaling={false}
        style={
          [
            {},
            [
              {
                "fontSize": 23,
                "lineHeight": 35,
              },
              {
                "fontFamily": "Helvetica Neue",
              },
              {
                "color": "#191015",
              },
            ],
            undefined,
            undefined,
            [
              {
                "color": "#ADADAE",
                "fontFamily": "Helvetica Neue",
                "fontSize": 19,
                "lineHeight": 23,
                "textTransform": "uppercase",
              },
              undefined,
            ],
          ]
        }
      >
        homeScreen.selectLocation.nearby undefined
      </Text>
    </View>
    <View
      accessibilityRole="imagebutton"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <RCTImageView
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        internal_analyticTag={null}
        resizeMode="contain"
        source={
          [
            {
              "height": undefined,
              "uri": undefined,
              "width": undefined,
            },
          ]
        }
        style={
          {
            "height": 26,
            "overflow": "hidden",
            "resizeMode": "contain",
            "transform": [
              {
                "rotate": "180deg",
              },
            ],
            "width": 26,
          }
        }
      />
    </View>
  </View>
  <View>
    <Text>
      Test content
    </Text>
  </View>
</View>
`;
