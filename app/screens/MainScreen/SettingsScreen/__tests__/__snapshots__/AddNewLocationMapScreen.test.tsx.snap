// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<div>
  <div />
  <View
    style={
      [
        {
          "left": 0,
          "paddingHorizontal": 52,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        },
        {
          "top": 26,
        },
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 52,
        }
      }
    >
      <View
        accessibilityRole="imagebutton"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View
          animatedStyle={
            {
              "value": {},
            }
          }
          collapsable={false}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "#353739",
              "borderRadius": 143,
              "display": "flex",
              "height": 60,
              "justifyContent": "center",
              "overflow": "hidden",
              "position": "relative",
              "width": 60,
            }
          }
        >
          <View
            style={
              [
                {
                  "backgroundColor": "transparent",
                },
                [
                  {
                    "alignItems": "center",
                    "backgroundColor": "#1E2022",
                    "borderRadius": 143,
                    "display": "flex",
                    "height": 60,
                    "justifyContent": "center",
                    "overflow": "hidden",
                    "position": "relative",
                    "width": 60,
                  },
                  undefined,
                ],
              ]
            }
          >
            <ViewManagerAdapter_ExpoBlurView
              proxiedProperties={
                {
                  "intensity": 0,
                  "tint": "default",
                }
              }
              style={
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View>
              <RCTImageView
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                internal_analyticTag={null}
                resizeMode="contain"
                source={
                  [
                    {
                      "height": undefined,
                      "uri": undefined,
                      "width": undefined,
                    },
                  ]
                }
                style={
                  {
                    "height": 29,
                    "overflow": "hidden",
                    "resizeMode": "contain",
                    "tintColor": "#DEDDDE",
                    "width": 29,
                  }
                }
                tintColor="#DEDDDE"
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "flex": 1,
          },
          {
            "flex": 0,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "backgroundColor": "#1E2022",
              "borderColor": "transparent",
              "borderRadius": 40,
              "borderWidth": 2,
              "height": 80,
              "marginBottom": 26,
              "overflow": "hidden",
            },
          ]
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "height": 80,
              "justifyContent": "center",
              "marginStart": 24,
            }
          }
        >
          <RCTImageView
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            internal_analyticTag={null}
            resizeMode="contain"
            source={
              [
                {
                  "height": undefined,
                  "uri": undefined,
                  "width": undefined,
                },
              ]
            }
            style={
              {
                "height": 40,
                "overflow": "hidden",
                "resizeMode": "contain",
                "tintColor": "#ADADAE",
                "width": 40,
              }
            }
            tintColor="#ADADAE"
          />
        </View>
        <TextInput
          allowFontScaling={false}
          clearButtonMode="never"
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="settings.locationSettingsData.addNewLocation.searchInputPlaceholder undefined"
          placeholderTextColor="#ADADAE"
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "borderRadius": 5,
                "flex": 1,
                "fontSize": 15,
                "height": 44,
                "marginBottom": 5,
                "paddingHorizontal": 10,
                "paddingVertical": 5,
              },
              {
                "alignSelf": "stretch",
                "backgroundColor": "transparent",
                "borderRadius": 0,
                "color": "#DEDDDE",
                "flex": 1,
                "fontFamily": "Helvetica Neue",
                "fontSize": 26,
                "height": 80,
                "lineHeight": 32,
                "marginHorizontal": 17,
                "paddingHorizontal": 0,
                "textAlignVertical": "center",
              },
            ]
          }
          value=""
        />
      </View>
    </View>
  </View>
  <Modal
    animationType="none"
    deviceHeight={null}
    deviceWidth={null}
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={true}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    onSwipeComplete={[Function]}
    panResponderThreshold={4}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    supportedOrientations={
      [
        "portrait",
        "landscape",
      ]
    }
    swipeDirection="down"
    swipeThreshold={100}
    transparent={true}
    useNativeDriverForBackdrop={true}
    visible={false}
  />
</div>
`;
