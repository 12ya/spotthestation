// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    {
      "paddingHorizontal": 18,
      "paddingTop": 18,
      "width": "100%",
    }
  }
>
  <View
    style={
      {
        "alignItems": "flex-start",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingBottom": 5,
      }
    }
  >
    <View
      style={
        {
          "width": "85%",
        }
      }
    >
      <Text
        accessibilityHint="address"
        accessibilityLabel="address"
        accessibilityRole="text"
        accessible={true}
        allowFontScaling={false}
        ellipsizeMode="tail"
        numberOfLines={2}
        style={
          [
            {},
            [
              {
                "fontSize": 23,
                "lineHeight": 35,
              },
              {
                "fontFamily": "Helvetica Neue",
              },
              {
                "color": "#191015",
              },
            ],
            undefined,
            undefined,
            {
              "color": "#FFFFFF",
              "fontFamily": "Helvetica Neue",
              "fontSize": 29,
              "lineHeight": 37,
            },
          ]
        }
      >
        Continental
      </Text>
    </View>
    <View
      accessibilityHint="open select location modal"
      accessibilityLabel="pin button"
      accessibilityRole="imagebutton"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
    >
      <View
        animatedStyle={
          {
            "value": {},
          }
        }
        collapsable={false}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#1E2022",
            "borderRadius": 143,
            "display": "flex",
            "height": 60,
            "justifyContent": "center",
            "overflow": "hidden",
            "position": "relative",
            "width": 60,
          }
        }
      >
        <View
          style={
            [
              {
                "backgroundColor": "transparent",
              },
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#1E2022",
                  "borderRadius": 143,
                  "display": "flex",
                  "height": 60,
                  "justifyContent": "center",
                  "overflow": "hidden",
                  "position": "relative",
                  "width": 60,
                },
                undefined,
              ],
            ]
          }
        >
          <ViewManagerAdapter_ExpoBlurView
            proxiedProperties={
              {
                "intensity": 0,
                "tint": "default",
              }
            }
            style={
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View>
            <RCTImageView
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              internal_analyticTag={null}
              resizeMode="contain"
              source={
                [
                  {
                    "height": undefined,
                    "uri": undefined,
                    "width": undefined,
                  },
                ]
              }
              style={
                {
                  "height": 29,
                  "overflow": "hidden",
                  "resizeMode": "contain",
                  "tintColor": "#FFFFFF",
                  "width": 29,
                }
              }
              tintColor="#FFFFFF"
            />
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      {
        "alignItems": "flex-start",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingBottom": 5,
      }
    }
  >
    <View
      accessibilityHint="open sightings modal"
      accessibilityLabel="next sighting"
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "backgroundColor": "#1E2022",
            "borderRadius": 15,
            "borderWidth": 2,
            "paddingVertical": 8,
            "width": "48%",
          },
          {
            "borderColor": "#0B3D91",
          },
        ]
      }
    >
      <Text
        accessibilityHint="sighting header"
        accessibilityLabel="sighting header"
        accessibilityRole="text"
        accessible={true}
        allowFontScaling={false}
        style={
          [
            {},
            [
              {
                "fontSize": 23,
                "lineHeight": 35,
              },
              {
                "fontFamily": "Helvetica Neue",
              },
              {
                "color": "#191015",
              },
            ],
            undefined,
            undefined,
            {
              "color": "#ADADAE",
              "fontFamily": "Helvetica Neue",
              "fontSize": 17,
              "lineHeight": 23,
              "textAlign": "center",
            },
          ]
        }
      >
        homeScreen.header.firstTimeHead undefined
      </Text>
      <Text
        accessibilityHint="sighting"
        accessibilityLabel="sighting"
        accessibilityRole="text"
        accessible={true}
        allowFontScaling={false}
        style={
          [
            {},
            [
              {
                "fontSize": 23,
                "lineHeight": 35,
              },
              {
                "fontFamily": "Helvetica Neue",
              },
              {
                "color": "#191015",
              },
            ],
            undefined,
            undefined,
            {
              "color": "#DEDDDE",
              "fontFamily": "Helvetica Neue",
              "fontSize": 22,
              "lineHeight": 35,
              "textAlign": "center",
            },
          ]
        }
      />
      <Text
        accessibilityHint="timezone"
        accessibilityLabel="timezone"
        accessibilityRole="text"
        accessible={true}
        allowFontScaling={false}
        style={
          [
            {},
            [
              {
                "fontSize": 23,
                "lineHeight": 35,
              },
              {
                "fontFamily": "Helvetica Neue",
              },
              {
                "color": "#191015",
              },
            ],
            undefined,
            undefined,
            {
              "color": "#ADADAE",
              "fontFamily": "Helvetica Neue",
              "fontSize": 13,
              "lineHeight": 23,
              "textAlign": "center",
            },
          ]
        }
      >
        homeScreen.header.timezone undefined: 
      </Text>
    </View>
    <View
      accessibilityHint="countdown to next sighting"
      accessibilityLabel="countdown"
      accessibilityRole="text"
      accessible={true}
      style={
        {
          "backgroundColor": "#1E2022",
          "borderRadius": 15,
          "borderWidth": 2,
          "paddingVertical": 8,
          "width": "48%",
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          [
            {},
            [
              {
                "fontSize": 23,
                "lineHeight": 35,
              },
              {
                "fontFamily": "Helvetica Neue",
              },
              {
                "color": "#191015",
              },
            ],
            undefined,
            undefined,
            {
              "color": "#ADADAE",
              "fontFamily": "Helvetica Neue",
              "fontSize": 20,
              "lineHeight": 23,
              "textAlign": "center",
            },
          ]
        }
      >
        homeScreen.header.secondTimeHead undefined
      </Text>
      <Text
        allowFontScaling={false}
        style={
          [
            {},
            [
              {
                "fontSize": 23,
                "lineHeight": 35,
              },
              {
                "fontFamily": "Helvetica Neue",
              },
              {
                "color": "#191015",
              },
            ],
            undefined,
            undefined,
            {
              "color": "#DEDDDE",
              "fontFamily": "Helvetica Neue",
              "fontSize": 22,
              "lineHeight": 35,
              "textAlign": "center",
            },
          ]
        }
      />
      <Text
        allowFontScaling={false}
        style={
          [
            {},
            [
              {
                "fontSize": 23,
                "lineHeight": 35,
              },
              {
                "fontFamily": "Helvetica Neue",
              },
              {
                "color": "#191015",
              },
            ],
            undefined,
            undefined,
            {
              "color": "#ADADAE",
              "fontFamily": "Helvetica Neue",
              "fontSize": 13,
              "lineHeight": 23,
              "textAlign": "center",
            },
          ]
        }
      >
        DD:HH:MM:SS
      </Text>
    </View>
  </View>
</View>
`;
