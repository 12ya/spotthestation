// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#1E2022",
        "borderTopLeftRadius": 26,
        "borderTopRightRadius": 26,
        "flex": 1,
      },
      Object {},
      Object {},
    ]
  }
>
  <View
    accessibilityHint="close modal"
    accessibilityLabel="x button"
    accessibilityRole="button"
    accessible={true}
    style={
      Object {
        "padding": 26,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 5,
      }
    }
  >
    <RCTImageView
      internal_analyticTag={null}
      resizeMode="contain"
      source={
        Array [
          Object {
            "height": undefined,
            "uri": undefined,
            "width": undefined,
          },
        ]
      }
      style={
        Object {
          "height": 52,
          "overflow": "hidden",
          "resizeMode": "contain",
          "tintColor": "#ADADAE",
          "width": 52,
        }
      }
      tintColor="#ADADAE"
    />
  </View>
  <Text
    accessibilityHint="title"
    accessibilityLabel="title"
    accessibilityRole="text"
    accessible={true}
    allowFontScaling={false}
    style={
      Array [
        Object {},
        Array [
          Object {
            "fontSize": 23,
            "lineHeight": 35,
          },
          Object {
            "fontFamily": "Helvetica Neue",
          },
          Object {
            "color": "#191015",
          },
        ],
        undefined,
        undefined,
        Object {
          "color": "#DEDDDE",
          "fontFamily": "Helvetica Neue",
          "fontSize": 40,
          "lineHeight": 63,
          "marginBottom": 15,
          "marginTop": 15,
          "paddingHorizontal": 52,
        },
      ]
    }
  >
    homeScreen.selectSightings.title undefined
  </Text>
  <Text
    accessibilityHint="title"
    accessibilityLabel="title"
    accessibilityRole="text"
    accessible={true}
    allowFontScaling={false}
    style={
      Array [
        Object {},
        Array [
          Object {
            "fontSize": 23,
            "lineHeight": 35,
          },
          Object {
            "fontFamily": "Helvetica Neue",
          },
          Object {
            "color": "#191015",
          },
        ],
        undefined,
        undefined,
        Object {
          "color": "#FFFFFF",
          "fontFamily": "Helvetica Neue",
          "fontSize": 26,
          "lineHeight": 32,
          "paddingHorizontal": 52,
          "width": "95%",
        },
      ]
    }
  >
    homeScreen.selectSightings.selectMessage undefined
  </Text>
  <View
    style={
      Object {
        "borderBottomColor": "#1E2022",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 52,
        "paddingTop": 22,
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {},
          Array [
            Object {
              "fontSize": 23,
              "lineHeight": 35,
            },
            Object {
              "fontFamily": "Helvetica Neue",
            },
            Object {
              "color": "#191015",
            },
          ],
          undefined,
          undefined,
          Object {
            "color": "#DEDDDE",
            "fontFamily": "Helvetica Neue",
            "fontSize": 23,
            "lineHeight": 30,
            "width": "80%",
          },
        ]
      }
    >
      homeScreen.selectSightings.switch undefined
    </Text>
    <View
      accessibilityHint="toggle notifications"
      accessibilityLabel="switch button"
      accessibilityRole="switch"
      accessibilityState={
        Object {
          "checked": undefined,
          "disabled": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Array [
                Object {
                  "alignItems": "center",
                  "borderWidth": 3,
                  "flexDirection": "row",
                  "flexGrow": 0,
                  "flexShrink": 0,
                  "height": 35,
                  "justifyContent": "space-between",
                  "overflow": "hidden",
                  "width": 35,
                },
                Object {
                  "borderRadius": 23,
                  "borderWidth": 0,
                  "height": 40,
                  "width": 66,
                },
              ],
              Object {
                "backgroundColor": "#353739",
              },
              undefined,
            ]
          }
        >
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "opacity": 0,
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#0B3D91",
                "borderColor": "rgba(0, 0, 0, 0)",
                "height": "100%",
                "opacity": 0,
                "overflow": "hidden",
                "paddingEnd": 6,
                "paddingStart": 6,
                "position": "absolute",
                "width": "100%",
              }
            }
          />
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "marginStart": 6,
                  "start": "0%",
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "backgroundColor": "#F4F2F1",
                "borderRadius": 17,
                "height": 29,
                "marginStart": 6,
                "position": "absolute",
                "start": "0%",
                "width": 29,
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "paddingBottom": 43,
        "paddingHorizontal": 52,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "marginTop": 52,
            "width": "100%",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 26,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              Object {
                "flexDirection": "row-reverse",
              },
            ]
          }
        >
          <Text
            accessibilityHint="homeScreen.selectSightings.sightings"
            accessibilityLabel="title"
            accessibilityRole="text"
            accessible={true}
            allowFontScaling={false}
            style={
              Array [
                Object {},
                Array [
                  Object {
                    "fontSize": 23,
                    "lineHeight": 35,
                  },
                  Object {
                    "fontFamily": "Helvetica Neue",
                  },
                  Object {
                    "color": "#191015",
                  },
                ],
                undefined,
                undefined,
                Array [
                  Object {
                    "color": "#ADADAE",
                    "fontFamily": "Helvetica Neue",
                    "fontSize": 19,
                    "lineHeight": 23,
                    "textTransform": "uppercase",
                  },
                  Object {
                    "textAlign": "right",
                    "width": "100%",
                  },
                ],
              ]
            }
          >
            homeScreen.selectSightings.sightings undefined
          </Text>
        </View>
      </View>
      <RCTScrollView
        accessibilityHint="Sightings scrollable area"
        accessibilityLabel="Sightings scrollable area"
        accessibilityRole="scrollbar"
        accessible={true}
      >
        <View />
      </RCTScrollView>
    </View>
  </View>
</View>
`;
